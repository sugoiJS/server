import * as expressUtils from "inversify-express-utils";
import {
    controller,
    httpMethod,
    httpGet,
    httpPut,
    httpPost,
    httpPatch,
    httpHead,
    all,
    httpDelete,
    request,
    response,
    requestParam,
    queryParam,
    requestBody,
    requestHeaders,
    cookies,
    next,
    injectHttpContext,
    getRouteInfo,
    BaseMiddleware,
    BaseHttpController,
    TYPE
} from "inversify-express-utils";

const Controller = controller,
    HttpPost = httpPost,
    HttpPut = httpPut,
    HttpGet = httpGet,
    HttpDelete = httpDelete,
    HttpHead = httpHead,
    HttpPatch = httpPatch,
    HttpMethod = httpMethod,
    All = all,
    InjectHttpContext = injectHttpContext,
    Request = request,
    Response = response,
    RequestParam = requestParam,
    QueryParam = queryParam,
    RequestBody = requestBody,
    RequestHeaders = requestHeaders,
    Cookies = cookies,
    Next = next;

export {
    expressUtils,
    controller,
    httpMethod,
    httpGet,
    httpPut,
    httpPost,
    httpPatch,
    httpHead,
    all,
    httpDelete,
    request,
    response,
    requestParam,
    queryParam,
    requestBody,
    requestHeaders,
    cookies,
    next,
    Controller,
    HttpPost,
    HttpPut,
    HttpGet,
    HttpDelete,
    HttpHead,
    HttpPatch,
    HttpMethod,
    All,
    Request,
    Response,
    RequestParam,
    QueryParam,
    RequestBody,
    RequestHeaders,
    Cookies,
    Next,
    injectHttpContext,
    getRouteInfo,
    BaseMiddleware,
    BaseHttpController,
    TYPE
};